using Dapper;
using Microsoft.Win32;
using OpenTeste.Domain;
using OpenTeste.Interface;
using System;
using System.Data.SqlClient;

namespace OpenTeste.Repository
{
    public class ClienteRepository : ICliente
    {
        IConfiguration _configuration;
        public Cliente cliente { get; set; }

        public ClienteRepository(IConfiguration configuration)
        {
            _configuration = configuration;
        }

        public string GetConnection()
        {
            var connection = _configuration.GetSection("ConnectionStrings").GetSection("Conexao").Value;

            return connection;
        }

        public Cliente DeleteCliente(Cliente objCliente)
        {
            var connectionString = this.GetConnection();

            using (var con = new SqlConnection(connectionString))
            {
                try
                {
                    con.Open();

                    var query = string.Format("Delete [dbo].[Clientes] where id ={0};", objCliente.Id);
                    con.Execute(query, cliente);
                    cliente.error.description = "Inserido com susesso!";
                    cliente.error.status = 200;

                }
                catch (Exception ex)
                {

                    throw ex;
                }
                finally
                {
                    con.Close();
                }

                return cliente;
            }
        }

        public Cliente GetCliente(int? id)
        {
            var connectionString = GetConnection();
            using (var con = new SqlConnection(connectionString))
            {
                try
                {
                    if (id > 0)
                    {
                        con.Open();
                        var query = string.Format("SELECT id, nome, email FROM Clientes where id={0}", id);
                        cliente = con.Query<Cliente>(query).FirstOrDefault();

                        if (cliente == null)
                        {
                            cliente.error.status = 401;
                            cliente.error.description = "Nenhum registro encontrado.";
                        }
                    }

                }
                catch (Exception ex)
                {

                    throw ex;
                }
                finally
                {
                    con.Close();
                }
                return cliente;
            }
        }

        public List<Cliente> GetClientes()
        {
            List<Cliente> listaClientes = new List<Cliente>();

            var connectionString = GetConnection();
            using (var con = new SqlConnection(connectionString))
            {
                try
                {
                    
                    con.Open();
                    var query = string.Format("SELECT id, nome, email FROM Clientes");
                    listaClientes = con.Query<Cliente>(query).ToList();

                    if (listaClientes == null)
                    {
                        listaClientes.Add(new Cliente { Id=0, Nome="", Email="", error = new Error { description = "Nenhum registro encontrado.", status = 401 } });
                    }

                }
                catch (Exception ex)
                {

                    throw ex;
                }
                finally
                {
                    con.Close();
                }
                return listaClientes;
            }
        }

        public Cliente InsertCliente(Cliente cliente)
        {
            var connectionString = this.GetConnection();

            using (var con = new SqlConnection(connectionString))
            {
                try
                {
                    con.Open();

                    var query = "INSERT INTO [dbo].[Clientes] (nome, email) VALUES (@nome, @email);";
                    con.Execute(query, cliente);
                    cliente.error.description = "Inserido com susesso!";
                    cliente.error.status = 200;

                }
                catch (Exception ex)
                {

                    throw ex;
                }
                finally
                {
                    con.Close();
                }

                return cliente;
            }
        }

        public Cliente UpdateCliente(Cliente objCliente)
        {
            var connectionString = this.GetConnection();

            using (var con = new SqlConnection(connectionString))
            {
                try
                {
                    con.Open();

                    var query = string.Format("Update [dbo].[Clientes] Set nome = @nome, email = @email where id = {0}", objCliente.Id);
                    con.Execute(query, cliente);
                    cliente.error.description = "Atualizado com susesso!";
                    cliente.error.status = 200;

                }
                catch (Exception ex)
                {

                    throw ex;
                }
                finally
                {
                    con.Close();
                }

                return cliente;
            }
        }
    }
}
