using Dapper;
using Microsoft.Extensions.Configuration;
using OpenTeste.Domain;
using OpenTeste.Interface;
using System.Data.SqlClient;

namespace OpenTeste.Repository
{
    public class PedidoRepository : IPedido
    {
        IConfiguration _configuration;
        public Pedido pedido { get; set; }
        public PedidoRepository(IConfiguration configuration)
        {
            _configuration = configuration;
        }

        public string GetConnection()
        {
            var connection = _configuration.GetSection("ConnectionStrings").GetSection("Conexao").Value;

            return connection;
        }

        public Pedido DeletePedido(Pedido objPedido)
        {
            var connectionString = this.GetConnection();

            using (var con = new SqlConnection(connectionString))
            {
                try
                {
                    con.Open();

                    var queryItens = string.Format("Delete [dbo].[ItensPedidos] where idPedido ={0};", objPedido.Id);
                    con.Execute(queryItens, pedido);

                    var query = string.Format("Delete [dbo].[Pedidos] where id ={0};", objPedido.Id);
                    con.Execute(query, pedido);
                    pedido.error.description = "Exluido com susesso!";
                    pedido.error.status = 200;

                }
                catch (Exception ex)
                {

                    throw ex;
                }
                finally
                {
                    con.Close();
                }

                return pedido;
            }
        }

        public Pedido GetPedido(Pedido objPedido)
        {
            var connectionString = GetConnection();
            using (var con = new SqlConnection(connectionString))
            {
                try
                {
                    if (objPedido != null)
                    {
                        con.Open();
                        var query = string.Format("SELECT [id], [idCliente], [numeroPedido], [dataCriacao] FROM [dbo].[Pedidos] where id = {0} and idCliente = {1}", objPedido.Id, objPedido.IdCliente);
                        pedido = con.Query<Pedido>(query).FirstOrDefault();

                        if (pedido == null)
                        {
                            pedido.error.status = 401;
                            pedido.error.description = "Nenhum registro encontrado.";
                        }
                    }

                }
                catch (Exception ex)
                {

                    throw ex;
                }
                finally
                {
                    con.Close();
                }
                return pedido;
            }
        }

        public List<Pedido> GetPedidos()
        {
            List<Pedido> listaPedidos = new List<Pedido>();

            var connectionString = GetConnection();
            using (var con = new SqlConnection(connectionString))
            {
                try
                {

                    con.Open();
                    var query = string.Format("SELECT [id], [idCliente], [numeroPedido], [dataCriacao] FROM [dbo].[Pedidos]");
                    listaPedidos = con.Query<Pedido>(query).ToList();

                    if (listaPedidos == null)
                    {
                        listaPedidos.Add(new Pedido { Id = 0, NumeroDoPedido = "", IdCliente = 0, DataDeCriacao = DateTime.Now, ItensDoPedido = null, error = new Error { description = "Nenhum registro encontrado.", status = 401 } });
                    }

                }
                catch (Exception ex)
                {

                    throw ex;
                }
                finally
                {
                    con.Close();
                }
                return listaPedidos;
            }
        }

        public Pedido InsertPedido(Pedido objPedido)
        {
            var connectionString = this.GetConnection();

            using (var con = new SqlConnection(connectionString))
            {
                try
                {
                    con.Open();

                    var query = "INSERT INTO [dbo].[Pedidos] ([idCliente], [numeroPedido], [dataCriacao]) VALUES (@idCliente, @numeroPedido, @dataCriacao);";
                    con.Execute(query, pedido);

                }
                catch (Exception ex)
                {

                    throw ex;
                }
                finally
                {
                    con.Close();
                }

                return pedido;
            }
        }

        public Pedido UpdatePedido(Pedido objPedido)
        {
            var connectionString = this.GetConnection();

            using (var con = new SqlConnection(connectionString))
            {
                try
                {
                    con.Open();

                    var query = string.Format("Update [dbo].[Pedidos] Set idCliente = @idCliente where id = {0}", objPedido.Id);
                    con.Execute(query, pedido);
                    pedido.error.description = "Atualizado com susesso!";
                    pedido.error.status = 200;

                }
                catch (Exception ex)
                {

                    throw ex;
                }
                finally
                {
                    con.Close();
                }

                return pedido;
            }
        }
    }
}
